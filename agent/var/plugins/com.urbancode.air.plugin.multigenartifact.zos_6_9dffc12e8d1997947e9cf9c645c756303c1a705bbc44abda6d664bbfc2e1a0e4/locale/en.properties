#NLS_ENCODING=UTF-8
#NLS_MESSAGEFORMAT_NONE
ASC\ Order=ASC Order
Check\ this\ box\ to\ ignore\ unresolved\ properties\ in\ template.\ On\ Default(unchecked)\ this\ step\ will\ fail\ if\ any\ unresolved\ properties\ are\ found.=Check this box to ignore unresolved properties in template. On Default(unchecked) this step will fail if any unresolved properties are found.
Component\ Name=Component Name
Container\ Name\ Filter\ JSON=Container Name Filter JSON
Custom\ Properties\ Filter\ JSON=Custom Properties Filter JSON
Define\ template\ for\ each\ output\ property\ to\ generate\ customized\ text.\ Subsequent\ steps\ can\ access\ the\ customized\ text\ with\ ${p\:Step-Name/output-property-name}.\ For\ example\:\ If\ the\ step\ name\ is\ 'Bind\ Card\ Generator'\ and\ output\ property\ is\ 'CicsBindText'\ then\ the\ property\ can\ be\ referred\ in\ subsequent\ steps\ as\ ${p\:Bind\ Card\ Generator/CicsBindText}\ .\ Add\ separators\ like\ comma\ or\ newline\ using\ character\ ','\ or\ '\\n'\ in\ the\ template\ as\ needed.\ Use\ ${propname}\ to\ access\ custom\ properties.\ The\ following\ built-in\ properties\ are\ available\:\ ${sourceDataset}\ for\ the\ source\ dataset\ name,\ ${dataset}\ for\ the\ target\ dataset\ name,\ ${member}\ for\ the\ member\ name\ and\ ${deployType}\ for\ the\ deployment\ type.\ All\ property\ names\ are\ case-sensitive.\ Do\ not\ use\ the\ built-in\ names\ for\ custom\ properties.=Define template for each output property to generate customized text. Subsequent steps can access the customized text with ${p\:Step-Name/output-property-name}. For example\: If the step name is 'Bind Card Generator' and output property is 'CicsBindText' then the property can be referred in subsequent steps as ${p\:Bind Card Generator/CicsBindText} . Add separators like comma or newline using character ',' or '\\n' in the template as needed. Use ${propname} to access custom properties. The following built-in properties are available\: ${sourceDataset} for the source dataset name, ${dataset} for the target dataset name, ${member} for the member name and ${deployType} for the deployment type. All property names are case-sensitive. Do not use the built-in names for custom properties.
Deleted\ PDS=Deleted PDS
Deleted\ PDS\ Member=Deleted PDS Member
Deleted\ Sequential\ Data\ Set=Deleted Sequential Data Set
Deploy\ Type\ Filter\ JSON=Deploy Type Filter JSON
Deployment\ action\ Filter\ JSON=Deployment action Filter JSON
Deployment\ Base\ Path=Deployment Base Path
DESC\ Order=DESC Order
For\ Each=For Each
Generate\ information\ for\ each\ of\ the\ selected\ artifact\ type.=Generate information for each of the selected artifact type.
Generate\ Multiple\ Artifact\ Information=Generate Multiple Artifact Information
Generate\ multiple\ text\ information\ for\ selected\ version\ artifacts.\ The\ information\ is\ sent\ to\ the\ output\ properties\ for\ use\ by\ later\ steps.=Generate multiple text information for selected version artifacts. The information is sent to the output properties for use by later steps.
Ignore\ unresolved\ properties=Ignore unresolved properties
Order\ By=Order By
PDS=PDS
PDS\ Member=PDS Member
Resource\ Id=Resource Id
Resource\ Name\ Filter\ JSON=Resource Name Filter JSON
Sequential\ Data\ Set=Sequential Data Set
Shiplist\ Order=Shiplist Order
Target\ Data\ Set\ Name\ Filter\ JSON=Target Data Set Name Filter JSON
Template\ JSON=Template JSON
The\ base\ location\ to\ store\ deployment\ results\ and\ backups\ for\ rollback.\ =The base location to store deployment results and backups for rollback. 
The\ filter\ to\ limit\ Custom\ properties\ in\ the\ template\ for\ an\ output\ property.\ Specify\ each\ filter\ in\ the\ format\:\ propertyName\=valueFilter\ and\ separate\ each\ filter\ with\ a\ newline\ character.\ A\ property\ without\ a\ value\ selects\ all\ artifacts\ related\ to\ the\ specified\ property.\ Java\ regular\ expression\ matching\ is\ used\ if\ the\ filter\ begins\ and\ ends\ with\ a\ forward\ slash\ (/).\ For\ example,\ developer\=/M.*/\ matches\ artifacts\ for\ the\ developer\ property\ where\ the\ value\ of\ the\ property\ starts\ with\ M.=The filter to limit Custom properties in the template for an output property. Specify each filter in the format\: propertyName\=valueFilter and separate each filter with a newline character. A property without a value selects all artifacts related to the specified property. Java regular expression matching is used if the filter begins and ends with a forward slash (/). For example, developer\=/M.*/ matches artifacts for the developer property where the value of the property starts with M.
The\ filter\ to\ limit\ Deploy\ Types\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ specify\ /.*SRC.*/\ to\ match\ any\ text\ that\ contains\ SRC.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=The filter to limit Deploy Types in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash (/). For example, specify /.*SRC.*/ to match any text that contains SRC. If the filter is not a regular expression, exact matching is used.
The\ filter\ to\ limit\ PDS\ Members\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ /PGM.*/\ matches\ any\ text\ that\ starts\ with\ PGM.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=The filter to limit PDS Members in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash (/). For example, /PGM.*/ matches any text that starts with PGM. If the filter is not a regular expression, exact matching is used.
The\ filter\ to\ limit\ Source\ datasets\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ /.*LOAD/\ matches\ any\ text\ that\ ends\ with\ LOAD.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=The filter to limit Source datasets in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash (/). For example, /.*LOAD/ matches any text that ends with LOAD. If the filter is not a regular expression, exact matching is used.
The\ filter\ to\ limit\ target\ datasets\ and\ members\ based\ on\ type\ of\ deployment\ action\ performed.\ Possible\ action\ values\ are\ 'created'\ or\ 'updated'.\ For\ example\:\ If\ the\ action\ value\ is\ set\ to\ 'created'\ then\ artifacts\ which\ are\ newly\ created\ in\ target\ environment\ are\ selected.\ Note\:\ Action\ values\ are\ case\ insensitive.\ If\ value\ is\ empty\ or\ no\ value\ is\ passed\ then\ both\ 'created'\ and\ 'updated'\ artifacts\ are\ selected.=The filter to limit target datasets and members based on type of deployment action performed. Possible action values are 'created' or 'updated'. For example\: If the action value is set to 'created' then artifacts which are newly created in target environment are selected. Note\: Action values are case insensitive. If value is empty or no value is passed then both 'created' and 'updated' artifacts are selected.
The\ filter\ to\ limit\ Target\ datasets\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ /.*LOAD/\ matches\ any\ text\ that\ ends\ with\ LOAD.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=The filter to limit Target datasets in template for an output property. Specify the filter as a Java regular expression matching which must begin and end with a forward slash (/). For example, /.*LOAD/ matches any text that ends with LOAD. If the filter is not a regular expression, exact matching is used.
The\ z/OS\ Multi\ Generate\ Artifact\ Information\ plug-in\ generates\ one\ or\ more\ informational\ text\ based\ on\ defined\ templates.\ The\ information\ is\ sent\ to\ the\ output\ properties\ for\ use\ by\ later\ steps.=The z/OS Multi Generate Artifact Information plug-in generates one or more informational text based on defined templates. The information is sent to the output properties for use by later steps.
Utilities=Utilities
Version\ Name=Version Name
zOS\ Multi\ Generate\ Artifact\ Information=zOS Multi Generate Artifact Information
