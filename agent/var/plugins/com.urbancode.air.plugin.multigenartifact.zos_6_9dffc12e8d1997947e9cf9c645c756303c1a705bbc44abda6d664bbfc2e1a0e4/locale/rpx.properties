#NLS_ENCODING=UTF-8
#NLS_MESSAGEFORMAT_NONE
ASC\ Order=[G'ASC Order\u0e0f\u0e39\u0130\u0131\uff5c]
Check\ this\ box\ to\ ignore\ unresolved\ properties\ in\ template.\ On\ Default(unchecked)\ this\ step\ will\ fail\ if\ any\ unresolved\ properties\ are\ found.=[G'\uff23\uff48\uff45\uff43\uff4b \uff54\uff48\uff49\uff53 \uff42\uff4f\uff58 \uff54\uff4f \uff49\uff47\uff4e\uff4f\uff52\uff45 \uff55\uff4e\uff52\uff45\uff53\uff4f\uff4c\uff56\uff45\uff44 \uff50\uff52\uff4fperties in template. On Default(unchecked) this step will fail if any unresolved properties are found.\u0e0f\u0e39\u0130\u0131\uff5c]
Component\ Name=[G'\uff23\uff4f\uff4d\uff50onent Name\u0e0f\u0e39\u0130\u0131\uff5c]
Container\ Name\ Filter\ JSON=[G'\uff23\uff4f\uff4e\uff54\uff41\uff49\uff4e\uff45\uff52 Name Filter JSON\u0e0f\u0e39\u0130\u0131\uff5c]
Custom\ Properties\ Filter\ JSON=[G'\uff23\uff55\uff53\uff54\uff4f\uff4d \uff30\uff52\uff4fperties Filter JSON\u0e0f\u0e39\u0130\u0131\uff5c]
Define\ template\ for\ each\ output\ property\ to\ generate\ customized\ text.\ Subsequent\ steps\ can\ access\ the\ customized\ text\ with\ ${p\:Step-Name/output-property-name}.\ For\ example\:\ If\ the\ step\ name\ is\ 'Bind\ Card\ Generator'\ and\ output\ property\ is\ 'CicsBindText'\ then\ the\ property\ can\ be\ referred\ in\ subsequent\ steps\ as\ ${p\:Bind\ Card\ Generator/CicsBindText}\ .\ Add\ separators\ like\ comma\ or\ newline\ using\ character\ ','\ or\ '\\n'\ in\ the\ template\ as\ needed.\ Use\ ${propname}\ to\ access\ custom\ properties.\ The\ following\ built-in\ properties\ are\ available\:\ ${sourceDataset}\ for\ the\ source\ dataset\ name,\ ${dataset}\ for\ the\ target\ dataset\ name,\ ${member}\ for\ the\ member\ name\ and\ ${deployType}\ for\ the\ deployment\ type.\ All\ property\ names\ are\ case-sensitive.\ Do\ not\ use\ the\ built-in\ names\ for\ custom\ properties.=[G'\uff24\uff45\uff46\uff49\uff4e\uff45 \uff54\uff45\uff4d\uff50\uff4c\uff41\uff54\uff45 \uff46\uff4f\uff52 \uff45\uff41\uff43\uff48 \uff4f\uff55\uff54\uff50\uff55\uff54 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59 \uff54\uff4f \uff47\uff45\uff4e\uff45\uff52\uff41\uff54\uff45 \uff43\uff55\uff53\uff54\uff4f\uff4d\uff49\uff5a\uff45\uff44 \uff54\uff45\uff58\uff54. \uff33\uff55\uff42\uff53\uff45\uff51\uff55\uff45\uff4e\uff54 \uff53\uff54\uff45\uff50\uff53 \uff43\uff41\uff4e \uff41\uff43\uff43\uff45\uff53\uff53 \uff54\uff48\uff45 \uff43\uff55\uff53\uff54\uff4f\uff4d\uff49\uff5a\uff45\uff44 \uff54\uff45\uff58\uff54 \uff57\uff49\uff54\uff48 $[{p\:Step-Name/output-property-name}]. \uff26\uff4f\uff52 \uff45\uff58\uff41\uff4d\uff50\uff4c\uff45\: \uff29\uff46 \uff54\uff48\uff45 \uff53\uff54\uff45\uff50 \uff4e\uff41\uff4d\uff45 \uff49\uff53 '\uff22\uff49\uff4e\uff44 \uff23\uff41\uff52\uff44 \uff27\uff45\uff4e\uff45\uff52\uff41\uff54\uff4f\uff52' \uff41\uff4e\uff44 \uff4f\uff55\uff54\uff50\uff55\uff54 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59 \uff49\uff53 '\uff23\uff49\uff43\uff53\uff22\uff49\uff4e\uff44\uff34\uff45\uff58\uff54' \uff54\uff48\uff45\uff4e \uff54\uff48\uff45 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59 can be referred in subsequent steps as $[{p\:Bind Card Generator/CicsBindText}] . Add separators like comma or newline using character ',' or '\\n' in the template as needed. Use $[{propname}] to access custom properties. The following built-in properties are available\: $[{sourceDataset}] for the source dataset name, $[{dataset}] for the target dataset name, $[{member}] for the member name and $[{deployType}] for the deployment type. All property names are case-sensitive. Do not use the built-in names for custom properties.\u0e0f\u0e39\u0130\u0131\uff5c]
Deleted\ PDS=[G'\uff24\uff45leted PDS\u0e0f\u0e39\u0130\u0131\uff5c]
Deleted\ PDS\ Member=[G'\uff24\uff45\uff4c\uff45\uff54\uff45d PDS Member\u0e0f\u0e39\u0130\u0131\uff5c]
Deleted\ Sequential\ Data\ Set=[G'\uff24\uff45\uff4c\uff45\uff54\uff45\uff44 \uff33\uff45quential Data Set\u0e0f\u0e39\u0130\u0131\uff5c]
Deploy\ Type\ Filter\ JSON=[G'\uff24\uff45\uff50\uff4c\uff4f\uff59 \uff34\uff59pe Filter JSON\u0e0f\u0e39\u0130\u0131\uff5c]
Deployment\ action\ Filter\ JSON=[G'\uff24\uff45\uff50\uff4c\uff4f\uff59\uff4d\uff45\uff4et action Filter JSON\u0e0f\u0e39\u0130\u0131\uff5c]
Deployment\ Base\ Path=[G'\uff24\uff45\uff50\uff4c\uff4f\uff59\uff4dent Base Path\u0e0f\u0e39\u0130\u0131\uff5c]
DESC\ Order=[G'\uff24ESC Order\u0e0f\u0e39\u0130\u0131\uff5c]
For\ Each=[G'For Each\u0e0f\u0e39\u0130\u0131\uff5c]
Generate\ information\ for\ each\ of\ the\ selected\ artifact\ type.=[G'\uff27\uff45\uff4e\uff45\uff52\uff41\uff54\uff45 \uff49\uff4e\uff46\uff4frmation for each of the selected artifact type.\u0e0f\u0e39\u0130\u0131\uff5c]
Generate\ Multiple\ Artifact\ Information=[G'\uff27\uff45\uff4e\uff45\uff52\uff41\uff54\uff45 \uff2d\uff55\uff4ctiple Artifact Information\u0e0f\u0e39\u0130\u0131\uff5c]
Generate\ multiple\ text\ information\ for\ selected\ version\ artifacts.\ The\ information\ is\ sent\ to\ the\ output\ properties\ for\ use\ by\ later\ steps.=[G'\uff27\uff45\uff4e\uff45\uff52\uff41\uff54\uff45 \uff4d\uff55\uff4c\uff54\uff49\uff50\uff4c\uff45 \uff54\uff45\uff58\uff54 \uff49\uff4e\uff46\uff4f\uff52\uff4d\uff41\uff54\uff49\uff4f\uff4e \uff46or selected version artifacts. The information is sent to the output properties for use by later steps.\u0e0f\u0e39\u0130\u0131\uff5c]
Ignore\ unresolved\ properties=[G'\uff29\uff47\uff4e\uff4f\uff52\uff45 \uff55\uff4e\uff52esolved properties\u0e0f\u0e39\u0130\u0131\uff5c]
Order\ By=[G'Order By\u0e0f\u0e39\u0130\u0131\uff5c]
PDS=[G'PDS\u0e0f\u0e39\u0130\u0131\uff5c]
PDS\ Member=[G'\uff30DS Member\u0e0f\u0e39\u0130\u0131\uff5c]
Resource\ Id=[G'\uff32\uff45source Id\u0e0f\u0e39\u0130\u0131\uff5c]
Resource\ Name\ Filter\ JSON=[G'\uff32\uff45\uff53\uff4f\uff55\uff52\uff43\uff45 \uff2eame Filter JSON\u0e0f\u0e39\u0130\u0131\uff5c]
Sequential\ Data\ Set=[G'\uff33\uff45\uff51\uff55\uff45\uff4etial Data Set\u0e0f\u0e39\u0130\u0131\uff5c]
Shiplist\ Order=[G'\uff33\uff48\uff49\uff50list Order\u0e0f\u0e39\u0130\u0131\uff5c]
Target\ Data\ Set\ Name\ Filter\ JSON=[G'\uff34\uff41\uff52\uff47\uff45\uff54 \uff24\uff41\uff54a Set Name Filter JSON\u0e0f\u0e39\u0130\u0131\uff5c]
Template\ JSON=[G'\uff34\uff45\uff4dplate JSON\u0e0f\u0e39\u0130\u0131\uff5c]
The\ base\ location\ to\ store\ deployment\ results\ and\ backups\ for\ rollback.\ =[G'\uff34\uff48\uff45 \uff42\uff41\uff53\uff45 \uff4c\uff4f\uff43\uff41\uff54ion to store deployment results and backups for rollback. \u0e0f\u0e39\u0130\u0131\uff5c]
The\ filter\ to\ limit\ Custom\ properties\ in\ the\ template\ for\ an\ output\ property.\ Specify\ each\ filter\ in\ the\ format\:\ propertyName\=valueFilter\ and\ separate\ each\ filter\ with\ a\ newline\ character.\ A\ property\ without\ a\ value\ selects\ all\ artifacts\ related\ to\ the\ specified\ property.\ Java\ regular\ expression\ matching\ is\ used\ if\ the\ filter\ begins\ and\ ends\ with\ a\ forward\ slash\ (/).\ For\ example,\ developer\=/M.*/\ matches\ artifacts\ for\ the\ developer\ property\ where\ the\ value\ of\ the\ property\ starts\ with\ M.=[G'\uff34\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff54\uff4f \uff4c\uff49\uff4d\uff49\uff54 \uff23\uff55\uff53\uff54\uff4f\uff4d \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff49\uff45\uff53 \uff49\uff4e \uff54\uff48\uff45 \uff54\uff45\uff4d\uff50\uff4c\uff41\uff54\uff45 \uff46\uff4f\uff52 \uff41\uff4e \uff4f\uff55\uff54\uff50\uff55\uff54 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59. \uff33\uff50\uff45\uff43\uff49\uff46\uff59 \uff45\uff41\uff43\uff48 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff49\uff4e \uff54\uff48\uff45 \uff46\uff4f\uff52\uff4d\uff41\uff54\: \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59\uff2e\uff41\uff4d\uff45\=\uff56\uff41\uff4c\uff55\uff45\uff26\uff49\uff4c\uff54\uff45\uff52 \uff41\uff4e\uff44 \uff53\uff45\uff50\uff41\uff52\uff41\uff54\uff45 \uff45\uff41\uff43\uff48 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff57\uff49th a newline character. A property without a value selects all artifacts related to the specified property. Java regular expression matching is used if the filter begins and ends with a forward slash (/). For example, developer\=/M.*/ matches artifacts for the developer property where the value of the property starts with M.\u0e0f\u0e39\u0130\u0131\uff5c]
The\ filter\ to\ limit\ Deploy\ Types\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ specify\ /.*SRC.*/\ to\ match\ any\ text\ that\ contains\ SRC.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=[G'\uff34\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff54\uff4f \uff4c\uff49\uff4d\uff49\uff54 \uff24\uff45\uff50\uff4c\uff4f\uff59 \uff34\uff59\uff50\uff45\uff53 \uff49\uff4e \uff54\uff45\uff4d\uff50\uff4c\uff41\uff54\uff45 \uff46\uff4f\uff52 \uff41\uff4e \uff4f\uff55\uff54\uff50\uff55\uff54 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59. \uff33\uff50\uff45\uff43\uff49\uff46\uff59 \uff54\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff41\uff53 \uff41 \uff2a\uff41\uff56\uff41 \uff52\uff45\uff47\uff55\uff4car expression matching which must begin and end with a forward slash (/). For example, specify /.*SRC.*/ to match any text that contains SRC. If the filter is not a regular expression, exact matching is used.\u0e0f\u0e39\u0130\u0131\uff5c]
The\ filter\ to\ limit\ PDS\ Members\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ /PGM.*/\ matches\ any\ text\ that\ starts\ with\ PGM.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=[G'\uff34\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff54\uff4f \uff4c\uff49\uff4d\uff49\uff54 \uff30\uff24\uff33 \uff2d\uff45\uff4d\uff42\uff45\uff52\uff53 \uff49\uff4e \uff54\uff45\uff4d\uff50\uff4c\uff41\uff54\uff45 \uff46\uff4f\uff52 \uff41\uff4e \uff4f\uff55\uff54\uff50\uff55\uff54 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59. \uff33\uff50\uff45\uff43\uff49\uff46\uff59 \uff54\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff41\uff53 \uff41 \uff2a\uff41\uff56\uff41 \uff52\uff45\uff47ular expression matching which must begin and end with a forward slash (/). For example, /PGM.*/ matches any text that starts with PGM. If the filter is not a regular expression, exact matching is used.\u0e0f\u0e39\u0130\u0131\uff5c]
The\ filter\ to\ limit\ Source\ datasets\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ /.*LOAD/\ matches\ any\ text\ that\ ends\ with\ LOAD.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=[G'\uff34\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff54\uff4f \uff4c\uff49\uff4d\uff49\uff54 \uff33\uff4f\uff55\uff52\uff43\uff45 \uff44\uff41\uff54\uff41\uff53\uff45\uff54\uff53 \uff49\uff4e \uff54\uff45\uff4d\uff50\uff4c\uff41\uff54\uff45 \uff46\uff4f\uff52 \uff41\uff4e \uff4f\uff55\uff54\uff50\uff55\uff54 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59. \uff33\uff50\uff45\uff43\uff49\uff46\uff59 \uff54\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff41\uff53 \uff41 \uff2a\uff41\uff56\uff41 regular expression matching which must begin and end with a forward slash (/). For example, /.*LOAD/ matches any text that ends with LOAD. If the filter is not a regular expression, exact matching is used.\u0e0f\u0e39\u0130\u0131\uff5c]
The\ filter\ to\ limit\ target\ datasets\ and\ members\ based\ on\ type\ of\ deployment\ action\ performed.\ Possible\ action\ values\ are\ 'created'\ or\ 'updated'.\ For\ example\:\ If\ the\ action\ value\ is\ set\ to\ 'created'\ then\ artifacts\ which\ are\ newly\ created\ in\ target\ environment\ are\ selected.\ Note\:\ Action\ values\ are\ case\ insensitive.\ If\ value\ is\ empty\ or\ no\ value\ is\ passed\ then\ both\ 'created'\ and\ 'updated'\ artifacts\ are\ selected.=[G'\uff34\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff54\uff4f \uff4c\uff49\uff4d\uff49\uff54 \uff54\uff41\uff52\uff47\uff45\uff54 \uff44\uff41\uff54\uff41\uff53\uff45\uff54\uff53 \uff41\uff4e\uff44 \uff4d\uff45\uff4d\uff42\uff45\uff52\uff53 \uff42\uff41\uff53\uff45\uff44 \uff4f\uff4e \uff54\uff59\uff50\uff45 \uff4f\uff46 \uff44\uff45\uff50\uff4c\uff4f\uff59\uff4d\uff45\uff4e\uff54 \uff41\uff43\uff54\uff49\uff4f\uff4e \uff50\uff45\uff52\uff46\uff4f\uff52\uff4d\uff45\uff44. \uff30\uff4f\uff53\uff53\uff49\uff42\uff4c\uff45 \uff41\uff43\uff54\uff49\uff4f\uff4e \uff56\uff41\uff4c\uff55\uff45\uff53 \uff41\uff52\uff45 '\uff43\uff52\uff45\uff41\uff54\uff45\uff44' \uff4f\uff52 '\uff55\uff50\uff44\uff41\uff54ed'. For example\: If the action value is set to 'created' then artifacts which are newly created in target environment are selected. Note\: Action values are case insensitive. If value is empty or no value is passed then both 'created' and 'updated' artifacts are selected.\u0e0f\u0e39\u0130\u0131\uff5c]
The\ filter\ to\ limit\ Target\ datasets\ in\ template\ for\ an\ output\ property.\ Specify\ the\ filter\ as\ a\ Java\ regular\ expression\ matching\ which\ must\ begin\ and\ end\ with\ a\ forward\ slash\ (/).\ For\ example,\ /.*LOAD/\ matches\ any\ text\ that\ ends\ with\ LOAD.\ If\ the\ filter\ is\ not\ a\ regular\ expression,\ exact\ matching\ is\ used.=[G'\uff34\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff54\uff4f \uff4c\uff49\uff4d\uff49\uff54 \uff34\uff41\uff52\uff47\uff45\uff54 \uff44\uff41\uff54\uff41\uff53\uff45\uff54\uff53 \uff49\uff4e \uff54\uff45\uff4d\uff50\uff4c\uff41\uff54\uff45 \uff46\uff4f\uff52 \uff41\uff4e \uff4f\uff55\uff54\uff50\uff55\uff54 \uff50\uff52\uff4f\uff50\uff45\uff52\uff54\uff59. \uff33\uff50\uff45\uff43\uff49\uff46\uff59 \uff54\uff48\uff45 \uff46\uff49\uff4c\uff54\uff45\uff52 \uff41\uff53 \uff41 \uff2a\uff41\uff56\uff41 regular expression matching which must begin and end with a forward slash (/). For example, /.*LOAD/ matches any text that ends with LOAD. If the filter is not a regular expression, exact matching is used.\u0e0f\u0e39\u0130\u0131\uff5c]
The\ z/OS\ Multi\ Generate\ Artifact\ Information\ plug-in\ generates\ one\ or\ more\ informational\ text\ based\ on\ defined\ templates.\ The\ information\ is\ sent\ to\ the\ output\ properties\ for\ use\ by\ later\ steps.=[G'\uff34\uff48\uff45 \uff5a/\uff2f\uff33 \uff2d\uff55\uff4c\uff54\uff49 \uff27\uff45\uff4e\uff45\uff52\uff41\uff54\uff45 \uff21\uff52\uff54\uff49\uff46\uff41\uff43\uff54 \uff29\uff4e\uff46\uff4f\uff52\uff4d\uff41\uff54\uff49\uff4f\uff4e \uff50\uff4c\uff55\uff47-\uff49\uff4e \uff47\uff45\uff4e\uff45\uff52ates one or more informational text based on defined templates. The information is sent to the output properties for use by later steps.\u0e0f\u0e39\u0130\u0131\uff5c]
Utilities=[G'Utilities\u0e0f\u0e39\u0130\u0131\uff5c]
Version\ Name=[G'\uff36\uff45rsion Name\u0e0f\u0e39\u0130\u0131\uff5c]
zOS\ Multi\ Generate\ Artifact\ Information=[G'\uff5a\uff2f\uff33 \uff2d\uff55\uff4c\uff54\uff49 \uff27\uff45\uff4eerate Artifact Information\u0e0f\u0e39\u0130\u0131\uff5c]
